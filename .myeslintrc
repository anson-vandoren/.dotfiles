{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb-base",
  ],
  "env": {
    "node": true,
    "es6": true,
    "jest": true,
    "mocha": true
  },
  "globals": {
    "it": true,
    "expect": true,
    "describe": true,
    "jest": true,
    "document": true,
    "test": true,
    "window": true,
    "fetch": true,
    "WebSocket": true,
    "alert": true,
    "TextDecoder": false,
    "TextEncoder": false,
    "mixpanel": false,
    "atob": false,
    "btoa": false
  },
  "rules": {
    "react/jsx-filename-extension": 0,
    "react/forbid-prop-types": 0,
    "react/jsx-boolean-value": 0,
    "react/jsx-first-prop-new-line": 0,
    "react/jsx-closing-bracket-location": 0,
    "react/no-multi-comp": 0,
    "react/prefer-stateless-function": 0,
    "import/no-unresolved": 0,
    "import/no-extraneous-dependencies": 0,
    "import/extensions": 0,
    "import/first": 0,
    "import/no-dynamic-require": 0,
    "import/prefer-default-export": 0,
    "jsx-quotes": ["error", "prefer-single"],
    "lines-between-class-members": 0,
    "max-classes-per-file": 0,
    "no-alert": 0,
    "no-use-before-define": 0,
    "no-console": 0,
    "no-tabs": 0,
    "no-unused-vars": 0,
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "prefer-arrow-callback": 0,
    "no-param-reassign": 0,
    "no-underscore-dangle": 0,
    "@typescript-eslint/semi": "warn",
    "comma-dangle": 0,
    "no-return-assign": 0,
    "no-plusplus": 0,
    "global-require": 0,
    "object-property-newline": 0,
    "max-len": 0,
    "no-bitwise": 0,
    "react/no-array-index-key": 0,
    "arrow-parens": 0,
    "arrow-body-style": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "spaced-comment": 0,
    "class-methods-use-this": 0,
    "no-cond-assign": 0,
    "no-var-requires": 0,
    "no-invalid-this": 1,
    "no-unused-expressions": 0,
    "chai-friendly/no-unused-expressions": 2,
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "camelcase": [
      "error",
      {
        "allow": [
          "^UT_"
        ]
      }
    ]
  },
  "plugins": ["only-warn","@typescript-eslint", "chai-friendly"],
  "parser": "@typescript-eslint/parser"
}
